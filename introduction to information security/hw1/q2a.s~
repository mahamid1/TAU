# Declare the assembly flavor to use the intel syntax.
.intel_syntax noprefix

# Define a symbol to be exported from this file.
.global my_function

# Declare symbol type to be a function.
.type my_function, @function

# Code follows below.

my_function:
	# <<<< PUT YOUR CODE HERE >>>>
	#FIRST BLOCK : SAVING THE ARGUMENT AND CHECKS ITS VALUE IF ITS 1 OR 0
	#SECOND BLOCK : PUSHING n-1 to THE STACK AND THEN CALCULATING FIB(N-1)
	#THIRD BLOCK: WE USE A LOCAL VARIABLE TO SAVE THE RESULT AND THEN CALCULATING FIB(N-2)
	#4TH BLOCK:CALCULATING SQUARES FOR THE FIB(N-1) AND FIB(N-2)

	
	

	
	
    # TODO:
    # 1. Read the input to the function from the stack.
    # 2. Save the result in the register EAX (and then return!).
    # 3. Make sure to include a recursive function call (the recursive function
    #    can be this function, or a helper function defined later in this file).
    # 1. Read the input to the function from the stack.
    # 2. Save the result in the register EAX (and then return!).
    # 3. Make sure to include a recursive function call (the recursive function
    #    can be this function, or a helper function defined later in this file).
